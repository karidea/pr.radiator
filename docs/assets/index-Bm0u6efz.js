const N=(t,o)=>t.createdAt.getTime()-o.createdAt.getTime(),ee=(t,o)=>o.committedDate.getTime()-t.committedDate.getTime(),v=document.getElementById("progress-bar"),k=document.getElementById("repo-view"),te=document.getElementById("repo-title"),E=document.getElementById("repo-list"),oe=document.getElementById("repo-nav-hint"),A=document.getElementById("pr-view"),$=document.getElementById("open-pr-view"),T=document.getElementById("recent-pr-view"),y=document.getElementById("settings-form"),b=document.getElementById("shortcuts-overlay"),x=document.getElementById("owner"),_=document.getElementById("team"),B=document.getElementById("token"),se=document.getElementById("config-form"),ne=(t,o,i)=>{const r=i?`"${i}"`:"null";return`{organization(login: "${t}") {team(slug: "${o}") {repositories(first: 100, after: ${r}) {totalCount pageInfo {endCursor hasNextPage} edges {permission node {name isArchived}}}}}}`},re='ref(qualifiedName:"master") {target {... on Commit {history(first: 25, since: "%s") {nodes {committedDate messageHeadline parents {totalCount} associatedPullRequests(first:5) {nodes { createdAt number title url author { login } repository { name } }}}}}}}',ie="pullRequests(last: 15, states: OPEN) { nodes {title url createdAt baseRefName headRefOid isDraft number author { login } comments (first: 50) {nodes {createdAt author { login }}} reviews(first: 50) {nodes {state createdAt author { login }}} commits(last: 1) { nodes { commit { oid statusCheckRollup { state }}}} reviewDecision }}",ce=(t,o,i,r="")=>{const s=t==="recent"?re.replace("%s",r):ie,n=i.map(l=>`${l.replace(/[^a-zA-Z0-9]/g,"")}:repository(owner: "${o}", name: "${l}") { name ${s} }`).join(" ");return`query ${t}PRs { ${n} }`},w={fetchBatchQueries:async(t,o,i,r,s)=>{const n=Array.from({length:Math.ceil(r.length/4)},(l,d)=>r.slice(d*4,(d+1)*4));return Promise.all(n.map(async l=>{const d=await fetch("https://api.github.com/graphql",{method:"post",headers:{Authorization:`Bearer ${t}`},body:JSON.stringify({query:ce(o,i,l,s)})});if(!d.ok)throw new Error(`GraphQL request failed: ${d.status} ${d.statusText}`);return d.json()}))},queryTeamRepos:async(t,o,i)=>{let r=!0,s=null;const n=[];for(;r;){const l=await fetch("https://api.github.com/graphql",{method:"post",headers:{Authorization:`Bearer ${t}`},body:JSON.stringify({query:ne(o,i,s)})});if(!l.ok)throw new Error(`GraphQL request failed: ${l.status} ${l.statusText}`);const g=(await l.json()).data.organization.team.repositories;g.edges.forEach(c=>{c.permission==="ADMIN"&&c.node.isArchived===!1&&n.push(c.node.name)}),r=g.pageInfo.hasNextPage,s=g.pageInfo.endCursor,await new Promise(c=>setTimeout(c,1e3))}return n},filterTeamRepos:async(t,o,i,r)=>{const s=[],l=Array(20).fill(Promise.resolve()),d=async c=>{try{const a=await fetch(`https://api.github.com/repos/${o}/${c}/teams`,{headers:{Authorization:`Bearer ${t}`}});if(!a.ok)throw new Error(`REST request failed: ${a.status} ${a.statusText}`);const f=await a.json();for(const h of f)if(h.slug===i&&h.permission==="admin"){s.push(c);break}}catch(a){console.error(`Error fetching teams for repo ${c}:`,a)}},g=r.map((c,a)=>{const f=()=>d(c),h=l[a%20].then(f);return l[a%20]=h,h});return await Promise.all(g),s}},q=t=>{t.createdAt=new Date(t.createdAt),t.committedDate&&(t.committedDate=new Date(t.committedDate)),t.reviews?.nodes?.forEach(o=>{o.createdAt=new Date(o.createdAt)}),t.comments?.nodes?.forEach(o=>{o.createdAt=new Date(o.createdAt)})},ae=async(t,o,i,r)=>{try{I();const s=i.filter(f=>!r.includes(f)),n=new Date(Date.now()-336*60*60*1e3).toISOString(),l=await w.fetchBatchQueries(t,"recent",o,s,n),d=[];l.forEach(f=>{Object.keys(f.data).forEach(u=>{(f.data[u]?.ref?.target?.history?.nodes??[]).length>0&&d.push(f.data[u].ref)})});const g=[];d.forEach(f=>f.target.history.nodes.forEach(h=>h.parents.totalCount>1?h.associatedPullRequests.nodes.forEach(u=>{u.committedDate=h.committedDate,g.push(u)}):null));const c=[...new Set(g.map(f=>f.url))].map(f=>g.find(h=>h.url===f));c.forEach(q);const a=c.sort(ee);m({recentPRs:a})}catch(s){console.log("Failed to fetch recent PRs",s)}finally{R()}},p=async(t,o,i,r)=>{try{m({isFetchingOpenPRs:!0}),I();const s=i.filter(g=>!r.includes(g)),n=await w.fetchBatchQueries(t,"open",o,s),l=[];n.forEach(g=>{Object.keys(g.data).forEach(a=>{const f=g.data[a].name,h=g.data[a]?.pullRequests.nodes??[];h.length>0&&l.push(...h.map(u=>({...u,repository:{name:f}})))})}),l.forEach(q);const d=l.sort(N).filter(g=>!g.isDraft);m({PRs:d})}catch(s){console.log("Failed to fetch open PRs",s)}finally{R(),m({isFetchingOpenPRs:!1})}},le=()=>'<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="event-icon"><path d="M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7S4.8 480 8 480c66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32zM128 272c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z" /></svg>',S=()=>'<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 384 512" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="event-icon"><path d="M360 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24zm-75.078 384H99.08c17.059-46.797 52.096-80 92.92-80 40.821 0 75.862 33.196 92.922 80zm.019-256H99.078C91.988 108.548 88 86.748 88 64h208c0 22.805-3.987 44.587-11.059 64z" /></svg>',z=()=>'<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="event-icon"><path d="M3 13h18v-2H3v2z" /></svg>',H=()=>'<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 352 512" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="event-icon"><path d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z" /></svg>',j=()=>'<svg stroke="currentColor" fill="currentColor" viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="event-icon"><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z" /></svg>',de=()=>'<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="event-icon"><path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z" /></svg>',ge=()=>'<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="event-icon unreviewed-icon"><title>Unreviewed PR - Needs review</title><path d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z" /></svg>',fe=(t,o)=>{const i=[];t.nodes.forEach(n=>{const l=n.state==="COMMENTED"?"COMMENTED":n.state;i.push({createdAt:n.createdAt,author:n.author.login,state:l})}),o.nodes.forEach(n=>{i.push({createdAt:n.createdAt,author:n.author.login,state:"COMMENTED"})});const r=[];let s=null;return i.sort(N).forEach(n=>{!s||n.author!==s.author||n.state!==s.state?(s&&r.push(s),s={...n,count:1}):s.count=(s.count||1)+1}),s&&r.push(s),r},he=t=>{const o=Date.now()-t.getTime();return o<36e5?"last-hour":o<72e5?"last-two-hours":o<864e5?"last-day":o<6048e5?"last-week":"over-week-old"},me=(t,o)=>{const i=o.nodes.find(d=>d.commit.oid===t),r={SUCCESS:j(),PENDING:S(),FAILURE:H(),EXPECTED:S(),ERROR:de()},s=i?.commit?.statusCheckRollup?.state||"ERROR",n=r[s]||z();return`<span class="${s.toLowerCase()}">${n}</span>`},ue=({count:t,author:o,createdAt:i,state:r})=>{const s=(t??1)>1?`(${t})`:"",n=`${o}${s}`,l=i.toLocaleString();let d=`${n} ${r.toLowerCase()} at ${l}`;return r==="APPROVED"?`<span class="event-group approved" title="${d}">${n}${j()}</span>`:r==="CHANGES_REQUESTED"?(d=`${n} requested changes at ${l}`,`<span class="event-group changes-requested" title="${d}">${n}${H()}</span>`):r==="COMMENTED"?(d=`${n} commented at ${l}`,`<span class="event-group commented" title="${d}">${n}${le()}</span>`):r==="DISMISSED"?(d=`${n} dismissed at ${l}`,`<span class="event-group dismissed" title="${d}">${n}${z()}</span>`):""},pe=t=>{const o=Date.now()-t.getTime();if(o<0||isNaN(o))return"Invalid Date";const i=Math.round(o/6e4),r=Math.round(o/864e5),s=Math.round(r/30),n=Math.round(r/360);return i<1?"less than a minute ago":i<45?`${i} minute${i===1?"":"s"} ago`:i<90?"about 1 hour ago":r<1?`about ${Math.floor(i/60)} hour${Math.floor(i/60)===1?"":"s"} ago`:r<30?`${r} day${r===1?"":"s"} ago`:s<12?`about ${s} month${s===1?"":"s"} ago`:`about ${n} year${n===1?"":"s"} ago`},L=(t,o=!0,i=!1)=>{const{number:r,title:s,url:n,repository:l}=t,g=t[o?"committedDate":"createdAt"],c=pe(g),a=`pr-time-${t.url}`;if(o)return`<div><span id="${a}" title="${g}">${c}</span> ${t.author.login}&nbsp;<a href="${n}" target="_blank" rel="noopener noreferrer">${l.name}/pull/${r}</a>&nbsp;${s}</div>`;const{createdAt:f,reviews:h,comments:u,baseRefName:D,author:{login:Q},headRefOid:J,commits:G}=t,O=fe(h,u),U=me(J,G),V=h.nodes.length===0?ge():"",W=`<a href="${n}" target="_blank" rel="noopener noreferrer">${l.name}#${t.number}</a>`,K=i?D:"",X=O.length>0?`<br>&nbsp;&nbsp;${O.map((Y,$e)=>ue({...Y})).join("")}`:"",Z=`<span id="${a}" title="${g}">${c}</span>`;return`<div class="${he(f)}">${Z} ${V} ${U} ${K} ${Q} ${W} ${s} ${X}</div>`},Re={config:{token:localStorage.getItem("PR_RADIATOR_TOKEN")||"",owner:localStorage.getItem("PR_RADIATOR_OWNER")||"",team:localStorage.getItem("PR_RADIATOR_TEAM")||"",repos:JSON.parse(localStorage.getItem("PR_RADIATOR_REPOS")||"[]"),ignoreRepos:JSON.parse(localStorage.getItem("PR_RADIATOR_IGNORE_REPOS")||"[]")},PRs:[],recentPRs:[],showDependabotPRs:!1,showMasterPRs:!0,showNeedsReviewPRs:!1,showRecentPRs:!1,showRepoLinks:!1,ignoreMode:!1,selectedRepoIndex:-1,isFetchingOpenPRs:!1};let e={...Re};const I=()=>{v&&v.classList.add("active")},R=()=>{v&&(v.classList.add("fade-out"),setTimeout(()=>{v&&v.classList.remove("active","fade-out")},300))},m=t=>{e={...e,...t},P()},C=t=>e.config.ignoreRepos.includes(t),F=t=>{const o=[...e.config.ignoreRepos],i=o.indexOf(t);i>-1?o.splice(i,1):o.push(t),m({config:{...e.config,ignoreRepos:o}})},we=t=>{t.preventDefault();const o=x.value,i=B.value,r=_.value;localStorage.setItem("PR_RADIATOR_OWNER",o),localStorage.setItem("PR_RADIATOR_TOKEN",i),localStorage.setItem("PR_RADIATOR_TEAM",r),m({config:{...e.config,team:r,token:i,owner:o}}),e.config.token&&e.config.owner&&e.config.repos.length>0?p(e.config.token,e.config.owner,e.config.repos,e.config.ignoreRepos).catch(s=>{console.error("Error fetching PRs after submit",s)}):e.config.token&&e.config.owner&&e.config.team&&e.config.repos.length===0&&(I(),P(),w.queryTeamRepos(i,o,r).then(s=>w.filterTeamRepos(i,o,r,s)).then(s=>{localStorage.setItem("PR_RADIATOR_REPOS",JSON.stringify(s)),m({config:{...e.config,repos:s}}),P(),s.length>0?p(i,o,s,e.config.ignoreRepos).catch(n=>{console.error("Error fetching PRs after repos",n),R()}):R()}).catch(s=>{console.error("Error fetching repos after submit",s),R(),P()}))},P=()=>{const{config:{token:t,owner:o,team:i,repos:r},ignoreMode:s,selectedRepoIndex:n,showRepoLinks:l}=e;if(document.title="PR Radiator",!t||!o||!i){y.style.display="block",k.classList.add("hidden"),A.classList.add("hidden");return}if(y.style.display="none",r.length===0){k.classList.add("hidden"),$.innerHTML=`<div>Fetching ${i} team repositories...</div>`,$.classList.remove("hidden");return}if(l){k.classList.remove("hidden"),A.classList.add("hidden");let d,g,c;s?(d=`${i} repositories (${r.length}) - Edit Ignores (press i to exit)`,g=r.map((a,f)=>`<li class="${`repo-item ${C(a)?"ignored":""} ${f===n?"selected":""}`}" data-index="${f}" data-repo="${a}">${a}</li>`).join(""),c="<p>Navigate: j/k or arrows | Toggle: Enter/space or click</p>"):(d=`${i} repositories (${r.length}) (i to edit ignores)`,g=r.map(a=>`<li class="repo-item ${C(a)?"ignored":""}"><a href="https://github.com/${o}/${a}" target="_blank" rel="noopener">${a}</a></li>`).join(""),c=""),te.innerHTML=d,E.innerHTML=g,oe.innerHTML=c,E.classList.toggle("ignore-mode",s),E.classList.toggle("static-mode",!s)}else{k.classList.add("hidden"),A.classList.remove("hidden");let d="",g="";if(e.showRecentPRs)g=e.recentPRs.map(c=>L(c)).join("");else if(e.isFetchingOpenPRs&&e.PRs.length===0)d=`Fetching ${e.config.team} pull requests...`;else{const c=e.PRs.filter(a=>e.showDependabotPRs||a.author.login!=="dependabot").filter(a=>e.showMasterPRs||a.baseRefName!=="master"&&a.baseRefName!=="main").filter(a=>!e.showNeedsReviewPRs||a.reviewDecision==="REVIEW_REQUIRED"||a.reviewDecision===null);d=c.length===0?"No PRs found":c.map(a=>L(a,!1,e.showMasterPRs)).join(""),document.title=`(${c.length}) PR Radiator`}$.innerHTML=d,T.innerHTML=g,e.showRecentPRs?($.classList.add("hidden"),T.classList.remove("hidden")):($.classList.remove("hidden"),T.classList.add("hidden"))}l&&s&&(E.focus(),E.querySelectorAll(".repo-item").forEach(g=>{g.removeEventListener("click",M),g.addEventListener("click",M)}))},M=t=>{const o=t.currentTarget.dataset.repo;t.currentTarget.classList.add("toggled"),setTimeout(()=>{t.currentTarget.classList.remove("toggled")},200),F(o)},ve=(t,o)=>{let i=t,r;return r=setInterval(()=>i(),o),()=>clearInterval(r)},Ee=async()=>{const{config:{token:t,owner:o,team:i,repos:r,ignoreRepos:s}}=e;if(t&&o&&r.length>0&&await p(t,o,r,s),ve(()=>{t&&o&&r.length>0&&p(t,o,r,s).catch(n=>{console.error("Error in fetchOpenPRs on interval",n)})},3e5),y.hasAttribute("data-initialized")||(x.value=o,_.value=i,B.value=t,se.addEventListener("submit",we),y.setAttribute("data-initialized","true")),document.addEventListener("keydown",n=>{if(y.style.display==="block"||document.activeElement.tagName==="INPUT")return;const{showRepoLinks:l,ignoreMode:d}=e;if(l&&d){let c=!0;switch(n.key){case"j":case"ArrowDown":if(e.config.repos.length>0){const a=Math.min(e.config.repos.length-1,e.selectedRepoIndex+1);m({selectedRepoIndex:a})}break;case"k":case"ArrowUp":if(e.config.repos.length>0){const a=Math.max(0,e.selectedRepoIndex-1);m({selectedRepoIndex:a})}break;case"Enter":case" ":if(n.preventDefault(),e.config.repos.length>0&&e.selectedRepoIndex>=0){const a=e.config.repos[e.selectedRepoIndex];F(a)}break;default:c=!1}if(c)return}if(l&&d&&n.key!=="i"&&n.key!=="l"&&n.key!=="?")return;const g={d:()=>m({showDependabotPRs:!e.showDependabotPRs}),m:()=>m({showMasterPRs:!e.showMasterPRs}),n:()=>m({showNeedsReviewPRs:!e.showNeedsReviewPRs}),a:()=>{const c=!e.showRecentPRs;m({showRecentPRs:c}),c&&e.config.token&&e.config.owner&&e.config.repos.length>0&&ae(e.config.token,e.config.owner,e.config.repos,e.config.ignoreRepos).catch(console.error)},l:()=>{const c=!l;c?m({showRepoLinks:c,ignoreMode:!1,selectedRepoIndex:0,showRecentPRs:!1}):(localStorage.setItem("PR_RADIATOR_IGNORE_REPOS",JSON.stringify(e.config.ignoreRepos)),e.config.token&&e.config.owner&&e.config.repos.length>0&&p(e.config.token,e.config.owner,e.config.repos,e.config.ignoreRepos).catch(console.error),m({showRepoLinks:c,ignoreMode:!1,selectedRepoIndex:-1}))},i:()=>{if(!l)return;const c=!d;c||(localStorage.setItem("PR_RADIATOR_IGNORE_REPOS",JSON.stringify(e.config.ignoreRepos)),e.config.token&&e.config.owner&&e.config.repos.length>0&&p(e.config.token,e.config.owner,e.config.repos,e.config.ignoreRepos).catch(console.error)),m({ignoreMode:c,selectedRepoIndex:c?0:-1})},r:()=>{e.config.token&&e.config.owner&&e.config.repos.length>0&&p(e.config.token,e.config.owner,e.config.repos,e.config.ignoreRepos).catch(console.error)},"\\":()=>{m({config:{...e.config,repos:[]},PRs:[],recentPRs:[]}),I(),w.queryTeamRepos(e.config.token,e.config.owner,e.config.team).then(c=>w.filterTeamRepos(e.config.token,e.config.owner,e.config.team,c)).then(c=>{localStorage.setItem("PR_RADIATOR_REPOS",JSON.stringify(c)),m({config:{...e.config,repos:c}}),c.length>0?p(e.config.token,e.config.owner,c,e.config.ignoreRepos).catch(a=>{console.error("Error fetching PRs after repos",a),R()}):R()}).catch(c=>{console.error("Error fetching repos after submit",c),R()})},"?":()=>{b.style.display=b.style.display==="none"?"block":"none"}};g[n.key]&&g[n.key]()}),t&&o&&i&&r.length===0)try{I();const n=await w.queryTeamRepos(t,o,i),l=await w.filterTeamRepos(t,o,i,n);localStorage.setItem("PR_RADIATOR_REPOS",JSON.stringify(l)),m({config:{...e.config,repos:l}})}catch(n){console.error("Error in getTeamRepos",n),R()}document.addEventListener("visibilitychange",()=>{document.visibilityState==="visible"&&t&&o&&r.length>0&&!e.isFetchingOpenPRs&&p(t,o,r,s).catch(n=>{console.error("Error in fetchOpenPRs on tab focus",n)})}),P()};Ee();
