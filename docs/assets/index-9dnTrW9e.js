const I=(e,t)=>e.createdAt.getTime()-t.createdAt.getTime(),H=(e,t)=>t.committedDate.getTime()-e.committedDate.getTime(),Q=(e,t,r)=>{const n=r?`"${r}"`:"null";return`{organization(login: "${e}") {team(slug: "${t}") {repositories(first: 100, after: ${n}) {totalCount pageInfo {endCursor hasNextPage} edges {permission node {name isArchived}}}}}}`},j='ref(qualifiedName:"master") {target {... on Commit {history(first: 25, since: "%s") {nodes {committedDate messageHeadline parents {totalCount} associatedPullRequests(first:5) {nodes { createdAt number title url author { login } repository { name } }}}}}}}',J="pullRequests(last: 15, states: OPEN) { nodes {title url createdAt baseRefName headRefOid isDraft number author { login } comments (first: 50) {nodes {createdAt author { login }}} reviews(first: 50) {nodes {state createdAt author { login }}} commits(last: 1) { nodes { commit { oid statusCheckRollup { state }}}}}}",U=(e,t,r,n="")=>{const o=e==="recent"?j.replace("%s",n):J,a=r.map(i=>`${i.replace(/[^a-zA-Z0-9]/g,"")}:repository(owner: "${t}", name: "${i}") { name ${o} }`).join(" ");return`query ${e}PRs { ${a} }`},G=(e,t)=>Array.from({length:Math.ceil(e.length/t)},(r,n)=>e.slice(n*t,(n+1)*t)),K=e=>new Promise(t=>setTimeout(t,e)),p={fetchBatchQueries:async(e,t,r,n,o)=>{const a=G(n,4);return Promise.all(a.map(async i=>{const c=await fetch("https://api.github.com/graphql",{method:"post",headers:{Authorization:`Bearer ${e}`},body:JSON.stringify({query:U(t,r,i,o)})});if(!c.ok)throw new Error(`GraphQL request failed: ${c.status} ${c.statusText}`);return c.json()}))},queryTeamRepos:async(e,t,r)=>{let n=!0,o=null;const a=[];for(;n;){const i=await fetch("https://api.github.com/graphql",{method:"post",headers:{Authorization:`Bearer ${e}`},body:JSON.stringify({query:Q(t,r,o)})});if(!i.ok)throw new Error(`GraphQL request failed: ${i.status} ${i.statusText}`);const l=(await i.json()).data.organization.team.repositories;l.edges.forEach(h=>{h.permission==="ADMIN"&&h.node.isArchived===!1&&a.push(h.node.name)}),n=l.pageInfo.hasNextPage,o=l.pageInfo.endCursor,await K(1e3)}return a},filterTeamRepos:async(e,t,r,n)=>{const o=[],i=Array(20).fill(Promise.resolve()),c=async h=>{try{const m=await fetch(`https://api.github.com/repos/${t}/${h}/teams`,{headers:{Authorization:`Bearer ${e}`}});if(!m.ok)throw new Error(`REST request failed: ${m.status} ${m.statusText}`);const g=await m.json();for(const u of g)if(u.slug===r&&u.permission==="admin"){o.push(h);break}}catch(m){console.error(`Error fetching teams for repo ${h}:`,m)}},l=n.map((h,m)=>{const g=()=>c(h),u=i[m%20].then(g);return i[m%20]=u,u});return await Promise.all(l),o}},D=e=>{e.createdAt=new Date(e.createdAt),e.committedDate&&(e.committedDate=new Date(e.committedDate)),e.reviews?.nodes?.forEach(t=>{t.createdAt=new Date(t.createdAt)}),e.comments?.nodes?.forEach(t=>{t.createdAt=new Date(t.createdAt)})},W=async(e,t,r,n)=>{try{y();const o=r.filter(g=>!n.includes(g)),a=new Date(Date.now()-336*60*60*1e3).toISOString(),i=await p.fetchBatchQueries(e,"recent",t,o,a),c=[];i.forEach(g=>{Object.keys(g.data).forEach(f=>{(g.data[f]?.ref?.target?.history?.nodes??[]).length>0&&c.push(g.data[f].ref)})});const l=[];c.forEach(g=>g.target.history.nodes.forEach(u=>u.parents.totalCount>1?u.associatedPullRequests.nodes.forEach(f=>{f.committedDate=u.committedDate,l.push(f)}):null));const h=[...new Set(l.map(g=>g.url))].map(g=>l.find(u=>u.url===g));h.forEach(D);const m=h.sort(H);d({recentPRs:m})}catch(o){console.log("Failed to fetch recent PRs",o)}finally{w()}},R=async(e,t,r,n)=>{try{d({isFetchingOpenPRs:!0}),y();const o=r.filter(l=>!n.includes(l)),a=await p.fetchBatchQueries(e,"open",t,o),i=[];a.forEach(l=>{Object.keys(l.data).forEach(m=>{const g=l.data[m].name,u=l.data[m]?.pullRequests.nodes??[];u.length>0&&i.push(...u.map(f=>({...f,repository:{name:g}})))})}),i.forEach(D);const c=i.sort(I).filter(l=>!l.isDraft);d({PRs:c})}catch(o){console.log("Failed to fetch open PRs",o)}finally{w(),d({isFetchingOpenPRs:!1})}},V=()=>'<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="event-icon"><path d="M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7S4.8 480 8 480c66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32zM128 272c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 0c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z" /></svg>',A=()=>'<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 384 512" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="event-icon"><path d="M360 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24zm-75.078 384H99.08c17.059-46.797 52.096-80 92.92-80 40.821 0 75.862 33.196 92.922 80zm.019-256H99.078C91.988 108.548 88 86.748 88 64h208c0 22.805-3.987 44.587-11.059 64z" /></svg>',T=()=>'<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="event-icon"><path d="M3 13h18v-2H3v2z" /></svg>',C=()=>'<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 352 512" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="event-icon"><path d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z" /></svg>',O=()=>'<svg stroke="currentColor" fill="currentColor" viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="event-icon"><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z" /></svg>',X=()=>'<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="event-icon"><path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z" /></svg>',Z=()=>'<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="event-icon unreviewed-icon"><title>Unreviewed PR - Needs review</title><path d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z" /></svg>',Y=(e,t)=>{const r=[];e.nodes.forEach(a=>{const i=a.state==="COMMENTED"?"COMMENTED":a.state;r.push({createdAt:a.createdAt,author:a.author.login,state:i})}),t.nodes.forEach(a=>{r.push({createdAt:a.createdAt,author:a.author.login,state:"COMMENTED"})});const n=[];let o=null;return r.sort(I).forEach(a=>{!o||a.author!==o.author||a.state!==o.state?(o&&n.push(o),o={...a,count:1}):o.count=(o.count||1)+1}),o&&n.push(o),n},ee=e=>{const t=Date.now()-e.getTime();return t<36e5?"last-hour":t<72e5?"last-two-hours":t<864e5?"last-day":t<6048e5?"last-week":"over-week-old"},te=(e,t)=>{const r=t.nodes.find(c=>c.commit.oid===e),n={SUCCESS:O(),PENDING:A(),FAILURE:C(),EXPECTED:A(),ERROR:X()},o=r?.commit?.statusCheckRollup?.state||"ERROR",a=n[o]||T();return`<span class="${o.toLowerCase()}">${a}</span>`},oe=({count:e,author:t,createdAt:r,state:n})=>{const o=(e??1)>1?`(${e})`:"",a=`${t}${o}`,i=r.toLocaleString();let c=`${a} ${n.toLowerCase()} at ${i}`;return n==="APPROVED"?`<span class="event-group approved" title="${c}">${a}${O()}</span>`:n==="CHANGES_REQUESTED"?(c=`${a} requested changes at ${i}`,`<span class="event-group changes-requested" title="${c}">${a}${C()}</span>`):n==="COMMENTED"?(c=`${a} commented at ${i}`,`<span class="event-group commented" title="${c}">${a}${V()}</span>`):n==="DISMISSED"?(c=`${a} dismissed at ${i}`,`<span class="event-group dismissed" title="${c}">${a}${T()}</span>`):""},se=e=>{const t=Date.now()-e.getTime();if(t<0||isNaN(t))return"Invalid Date";const r=Math.round(t/6e4),n=Math.round(t/864e5),o=Math.round(n/30),a=Math.round(n/360);return r<1?"less than a minute ago":r<45?`${r} minute${r===1?"":"s"} ago`:r<90?"about 1 hour ago":n<1?`about ${Math.floor(r/60)} hour${Math.floor(r/60)===1?"":"s"} ago`:n<30?`${n} day${n===1?"":"s"} ago`:o<12?`about ${o} month${o===1?"":"s"} ago`:`about ${a} year${a===1?"":"s"} ago`},b=(e,t=!0,r=!1)=>{const{number:n,title:o,url:a,repository:i}=e,l=e[t?"committedDate":"createdAt"],h=se(l),m=`pr-time-${e.url}`;if(t)return`<div><span id="${m}" title="${l}">${h}</span> ${e.author.login}&nbsp;<a href="${a}" target="_blank" rel="noopener noreferrer">${i.name}/pull/${n}</a>&nbsp;${o}</div>`;const{createdAt:g,reviews:u,comments:f,baseRefName:E,author:{login:S},headRefOid:N,commits:M}=e,k=Y(u,f),L=te(N,M),B=u.nodes.length===0?Z():"",q=`<a href="${a}" target="_blank" rel="noopener noreferrer">${i.name}#${e.number}</a>`,_=r?E:"",z=k.length>0?`<br>&nbsp;&nbsp;${k.map((F,ie)=>oe({...F})).join("")}`:"",x=`<span id="${m}" title="${l}">${h}</span>`;return`<div class="${ee(g)}">${x} ${B} ${L} ${_} ${S} ${q} ${o} ${z}</div>`},ne={config:{token:localStorage.getItem("PR_RADIATOR_TOKEN")||"",owner:localStorage.getItem("PR_RADIATOR_OWNER")||"",team:localStorage.getItem("PR_RADIATOR_TEAM")||"",repos:JSON.parse(localStorage.getItem("PR_RADIATOR_REPOS")||"[]"),ignoreRepos:JSON.parse(localStorage.getItem("PR_RADIATOR_IGNORE_REPOS")||"[]")},PRs:[],recentPRs:[],showDependabotPRs:!1,showMasterPRs:!0,showNeedsReviewPRs:!1,showRecentPRs:!1,showRepoLinks:!1,isFetchingOpenPRs:!1};let s={...ne};const v=document.getElementById("progress-bar"),y=()=>{v&&v.classList.add("active")},w=()=>{v&&(v.classList.add("fade-out"),setTimeout(()=>{v&&v.classList.remove("active","fade-out")},300))},d=e=>{s={...s,...e},$()},re=e=>{e.preventDefault();const t=document.getElementById("owner").value,r=document.getElementById("token").value,n=document.getElementById("team").value;localStorage.setItem("PR_RADIATOR_OWNER",t),localStorage.setItem("PR_RADIATOR_TOKEN",r),localStorage.setItem("PR_RADIATOR_TEAM",n),d({config:{...s.config,team:n,token:r,owner:t}}),s.config.token&&s.config.owner&&s.config.repos.length>0?R(s.config.token,s.config.owner,s.config.repos,s.config.ignoreRepos).catch(o=>{console.error("Error fetching PRs after submit",o)}):s.config.token&&s.config.owner&&s.config.team&&s.config.repos.length===0&&(y(),$(),p.queryTeamRepos(r,t,n).then(o=>p.filterTeamRepos(r,t,n,o)).then(o=>{localStorage.setItem("PR_RADIATOR_REPOS",JSON.stringify(o)),d({config:{...s.config,repos:o}}),$(),o.length>0?R(r,t,o,s.config.ignoreRepos).catch(a=>{console.error("Error fetching PRs after repos",a),w()}):w()}).catch(o=>{console.error("Error fetching repos after submit",o),w(),$()}))},P={dependabot:e=>s.showDependabotPRs||e.author.login!=="dependabot",masterPRs:e=>s.showMasterPRs||e.baseRefName!=="master"&&e.baseRefName!=="main",needsReview:e=>!s.showNeedsReviewPRs||e.reviews.nodes.length===0},$=()=>{const{config:{token:e,owner:t,team:r,repos:n}}=s;document.title="PR Radiator";const o=document.getElementById("root"),a=document.getElementById("settings-form");if(!e||!t||!r){a.style.display="block",o.innerHTML="";return}if(a.style.display="none",n.length===0){o.innerHTML=`<div>Fetching ${r} team repositories...</div>`;return}const i=s.PRs.filter(P.dependabot).filter(P.masterPRs).filter(P.needsReview);let c="";if(s.showRepoLinks){const l=`https://github.com/${t}/`;c=`<h1>${r} repositories (${n.length})</h1><ul>${n.map(h=>`<li><a href="${l}${h}" target="_blank" rel="noopener">${h}</a></li>`).join("")}</ul>`}else s.showRecentPRs?c=s.recentPRs.map(l=>b(l)).join(""):s.isFetchingOpenPRs&&s.PRs.length===0?c=`Fetching ${r} pull requests...`:i.length===0?(document.title=`(${i.length}) PR Radiator`,c="No PRs found"):(document.title=`(${i.length}) PR Radiator`,c=i.map(l=>b(l,!1,s.showMasterPRs)).join(""));o.innerHTML=`<div class="App">${c}</div>`},ae=(e,t)=>{let r=e,n;return n=setInterval(()=>r(),t),()=>clearInterval(n)},ce=async()=>{const{config:{token:e,owner:t,team:r,repos:n,ignoreRepos:o}}=s;e&&t&&n.length>0&&await R(e,t,n,o);const a=300*1e3;ae(()=>{e&&t&&n.length>0&&R(e,t,n,o).catch(c=>{console.error("Error in fetchOpenPRs on interval",c)})},a);const i=document.getElementById("settings-form");if(!i.hasAttribute("data-initialized")){const c=document.getElementById("owner"),l=document.getElementById("team"),h=document.getElementById("token");c.value=t,l.value=r,h.value=e,document.getElementById("config-form").addEventListener("submit",re),i.setAttribute("data-initialized","true")}if(document.addEventListener("keydown",c=>{if(document.getElementById("settings-form").style.display==="block"||document.activeElement.tagName==="INPUT")return;const h={d:()=>d({showDependabotPRs:!s.showDependabotPRs}),m:()=>d({showMasterPRs:!s.showMasterPRs}),n:()=>d({showNeedsReviewPRs:!s.showNeedsReviewPRs}),a:()=>{const m=!s.showRecentPRs;d({showRecentPRs:m}),m&&s.config.token&&s.config.owner&&s.config.repos.length>0&&W(s.config.token,s.config.owner,s.config.repos,s.config.ignoreRepos).catch(console.error)},l:()=>d({showRepoLinks:!s.showRepoLinks}),r:()=>{s.config.token&&s.config.owner&&s.config.repos.length>0&&R(s.config.token,s.config.owner,s.config.repos,s.config.ignoreRepos).catch(console.error)},"\\":()=>{d({config:{...s.config,repos:[]},PRs:[],recentPRs:[]}),p.queryTeamRepos(s.config.token,s.config.owner,s.config.team).then(m=>p.filterTeamRepos(s.config.token,s.config.owner,s.config.team,m)).then(m=>{localStorage.setItem("PR_RADIATOR_REPOS",JSON.stringify(m)),d({config:{...s.config,repos:m}}),m.length>0&&R(s.config.token,t,m,s.config.ignoreRepos).catch(console.error)}).catch(m=>{console.error("Error in getTeamRepos",m),w()})},"?":()=>{const m=document.getElementById("shortcuts-overlay");m.style.display=m.style.display==="none"?"block":"none"}};h[c.key]&&h[c.key]()}),e&&t&&r&&n.length===0)try{y();const c=await p.queryTeamRepos(e,t,r),l=await p.filterTeamRepos(e,t,r,c);localStorage.setItem("PR_RADIATOR_REPOS",JSON.stringify(l)),d({config:{...s.config,repos:l}})}catch(c){console.error("Error in getTeamRepos",c),w()}document.addEventListener("visibilitychange",()=>{document.visibilityState==="visible"&&e&&t&&n.length>0&&!s.isFetchingOpenPRs&&R(e,t,n,o).catch(c=>{console.error("Error in fetchOpenPRs on tab focus",c)})}),$()};ce();
